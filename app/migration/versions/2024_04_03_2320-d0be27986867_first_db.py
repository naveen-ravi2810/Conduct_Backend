"""First db

Revision ID: d0be27986867
Revises:
Create Date: 2024-04-03 23:20:46.899210

"""

from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d0be27986867"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "skill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("skill", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_skill_skill"), "skill", ["skill"], unique=True)
    op.create_table(
        "users",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("github_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("linkedin_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("leetcode_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("codechef_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("portfolio_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone"),
    )
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=False)
    op.create_table(
        "forum",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("comment", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("parent_comment_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column(
            "Category",
            sa.Enum(
                "GENERAL",
                "HELP",
                "TEAM_UP",
                "TECHNOLOGY",
                "HACKATHON",
                "CP",
                name="categorytype",
            ),
            nullable=True,
        ),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("likes_count", sa.Integer(), nullable=False),
        sa.Column("dislike_count", sa.Integer(), nullable=False),
        sa.Column("sub_comment", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "userskilllink",
        sa.Column("skill_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["skill_id"],
            ["skill.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("skill_id", "user_id"),
    )
    op.create_table(
        "forum_reaction",
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("forum_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("reaction", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["forum_id"],
            ["forum.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "forum_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("forum_reaction")
    op.drop_table("userskilllink")
    op.drop_table("forum")
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_skill_skill"), table_name="skill")
    op.drop_table("skill")
    # ### end Alembic commands ###
