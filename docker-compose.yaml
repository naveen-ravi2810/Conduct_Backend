version: "3.8"

services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - POSTGRESQL_URI=${POSTGRESQL_URI}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_USER_NAME=${REDIS_USER_NAME}
        - REDIS_DB=${REDIS_DB}
        - JWT_SECRET_KEY=${JWT_SECRET_KEY}
        - JWT_ALGORITHM=${JWT_ALGORITHM}
        - JWT_EXPIRE_IN_SEC=${JWT_EXPIRE_IN_SEC}
        - DOMAIN_EMAIL=${DOMAIN_EMAIL}
        - EMAIL_PASSWORD=${EMAIL_PASSWORD}
        - EMAIL_EMAIL=${EMAIL_EMAIL}
        - CELERY_BACKEND=${CELERY_BACKEND}
        - CELERY_BROKER=${CELERY_BROKER}
    container_name: app
    command: bash -c "poetry run alembic upgrade head && poetry run uvicorn main:app --host=0.0.0.0 --port=8000"
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - app_network


  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=tiger
      - POSTGRES_USER=postgres
      - POSTGRES_DB=Conduct
    networks:
      - app_network


  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network


  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    command: "poetry run celery -A app.celery_worker worker -l info"
    restart: always
    depends_on:
      - redis
      - api


  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flower
    command: "poetry run celery -A app.celery_worker flower -l info --port=5555"
    restart: always
    depends_on:
      - redis
      - worker
      - api
    ports:
      - "5555:5555"


volumes:
  postgres_data:


networks:
  app_network:
